# Copyright 2022 D2iQ, Inc. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: release-please-main

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-22.04
    steps:
      - uses: google-github-actions/release-please-action@v3.7
        id: release-please
        with:
          release-type: go
          package-name: csi-driver-trusted-ca
          pull-request-title-pattern: "build${scope}: release${component} ${version}"
          changelog-notes-type: github

      - if: ${{ steps.release-please.outputs.release_created }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Gather tool versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: versions

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Install tools via asdf
        uses: asdf-vm/actions/install@v1

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Release
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ fromJson(steps.versions.outputs.tools).helm }}

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ fromJson(steps.versions.outputs.tools).helm }}

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Package Helm chart
        run: |
          rm -rf .cr-release-packages
          mkdir -p .cr-release-packages
          helm package --destination .cr-release-packages --version ${{ steps.release-please.outputs.tag_name }} --app-version ${{ steps.release-please.outputs.tag_name }} charts/csi-driver

      - if: ${{ steps.release-please.outputs.release_created }}
        name: Publish Helm chart
        uses: helm/chart-releaser-action@v1
        with:
          skip_packaging: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
